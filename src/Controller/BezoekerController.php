<?php

namespace App\Controller;

use App\Entity\PublicProduct;
use App\Form\ProductType;
use App\Form\PublicProductType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;

class BezoekerController extends Controller {

  /**
   * @Route("/homepage", name="homepage")
   */
  public function showHomepage() {


    return $this->render("publicwebsite/homepage.html.twig", [

    ]);
  }

  /**
   * @Route("/publicproduct/add", name="publicproductAdd")
   */
  public function addPublicProduct(Request $request) {
    $publicProduct = new PublicProduct();

    $form = $this->createForm(PublicProductType::class, $publicProduct);
    $form->handleRequest($request);

    if ($form->isSubmitted() && $form->isValid()) {
//      $file = new UploadedFile()->;
      $file = $publicProduct->getImage();

      $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();

      try {
        $file->move(
          $this->getParameter('image_directory'),
          $filename
        );
      } catch (FileException $e){
        //error
      }

      $publicProduct->setImage($filename);

      $em = $this->getDoctrine()->getManager();
      $em->persist($publicProduct);
      $em->flush();

      return $this->redirectToRoute('homepage');

    }

    return $this->render('publicwebsite/publicproducten.add.html.twig', [
        'form' => $form->createView(),
    ]);
  }

  /**
   * @return string
   */
  private function generateUniqueFileName()
  {
    // md5() reduces the similarity of the file names generated by
    // uniqid(), which is based on timestamps
    return md5(uniqid());
  }

}